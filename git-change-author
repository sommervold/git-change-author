#!/usr/bin/env bash

COUNT=0
SED_SCRIPT=""
declare -A emails
declare -A names

while IFS="|"; read -r commit author_name author_email; do
    if [ "$commit" = "" ]; then
        break
    fi
    COUNT=$(($COUNT+1))
    commit=$(git rev-parse --short $commit)
    
    emails["$commit"]="$author_email"
    names["$commit"]="$author_name"

    SED_SCRIPT="$SED_SCRIPT -e 's/^pick $commit/edit $commit/'"
    SED_SCRIPT="$SED_SCRIPT -e '/^merge -C $commit.*/a b'"
done </dev/stdin

if [ "$COUNT" -eq "0" ]; then
    >&2 echo "stdin is empty"
    exit 1
fi

GIT_SEQUENCE_EDITOR="sed -i $SED_SCRIPT" git rebase -i --rebase-merges --root &> /dev/null

for (( i = 0 ; i < $COUNT ; i++ ));
do
    if [ -f .git/rebase-merge/stopped-sha ]; then
        commit=$(git rev-parse --short $(cat .git/rebase-merge/stopped-sha))
    else
        # Probably a merge commit
	commit=$(git rev-parse --short $( tail -n 1 .git/rebase-merge/rewritten-list | cut -d" " -f1 ))
    fi
    author_name="${names[$commit]}"
    author_email="${emails[$commit]}"
    author="$author_name <$author_email>"
    {
    GIT_COMMITTER_NAME="$author_name" GIT_COMMITTER_EMAIL="$author_email" git commit --amend --no-edit --author="$author" --date="$GIT_AUTHOR_DATE"
    git rebase --continue;
    } &> /dev/null
done

echo "Author has been changed for $COUNT commits"
